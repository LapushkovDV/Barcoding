sql query queryKatBOXSaldo =
      select
        Coalesce(katBox.NREC, #comp(0))       as SYS_KATBOXNREC
       ,Coalesce(katMc.NREC, #comp(0))        as SYS_KATMCNREC
       ,Coalesce(katParty.NREC, #comp(0))     as SYS_KATPARTYNREC
       ,Coalesce(saldobox.kol, 0)            as SYS_SALDOBOXKOL
       ,%IdentityField                        as SYS_BARCODE
       %SelectFields
//       from saldoBox
//          left join katbox           on katbox.nrec = saldobox.cbox
       from katbox
          left join saldoBox         on saldobox.cbox = katbox.nrec
          left join katpodr          on katpodr.nrec = katbox.CPODR
//          left join katbox katbox_UP on katbox_UP.nrec = katbox.cBox
          left join attrnam          on attrnam.wtable = 1423 and attrnam.name = :anName
          left join attrval          on attrval.cattrnam = attrnam.nrec and attrval.wtable = attrnam.wtable and attrval.crec = katBox.nrec
          left join katmc            on katmc.nrec = saldobox.cMc
          left join shk_barcodelink SHK_BARCODELINK_MC on SHK_BARCODELINK_MC.wtable = 1411 and SHK_BARCODELINK_MC.crec = katmc.NREC and SHK_BARCODELINK_MC.type = 0
          left join katParty         on katparty.nrec = saldobox.cParty
          left join shk_barcodelink SHK_BARCODELINK_PARTY on SHK_BARCODELINK_PARTY.wtable = 1430 and SHK_BARCODELINK_PARTY.crec = katParty.NREC and SHK_BARCODELINK_PARTY.type = 0
          left join shk_barcodelink      on shk_barcodelink.wtable = 1423 and shk_barcodelink.crec = katbox.NREC and shk_barcodelink.type = 0
          left join KatBox KatBox_to        on KATBOX_to.nrec = #comp(0)
          left join shk_barcodelink shk_barcodelink_BoxTo on shk_barcodelink_BoxTo.wtable = 1423 and shk_barcodelink_BoxTo.crec = katbox_to.NREC and shk_barcodelink_BoxTo.type = 0
          left join SaldoBox SaldoBox_to      on SaldoBox_to.nrec = #comp(0)
          left join SHK_TSD_ARM_USER SHK_TSD on SHK_TSD.nrec = shk_barcodeLink.cTSD
          left join SHK_TSD_ARM_USER SHK_ARM on SHK_ARM.nrec = shk_barcodeLink.cARM
          left join SHK_TSD_ARM_USER SHK_USER on SHK_USER.nrec = shk_barcodeLink.cUser
          left join x$users on x$users.ATL_NREC = SHK_USER.cUser

       where %IdentityField = :pIdent // если меняете запрос, то обязательно исправьте функцию Fill_fieldArray
//Дима Белый сказал убрать это, чтобы пустые возвращались           and saldobox.kol <> 0
//Дима Белый сказал добавить костыль по сортировке сюда... почему не фронт? а ХЗ
          order by katmc.name
;

function GetResultQueryForKatBOXSaldo(_pcSHKObj: comp; _pIdent : string) : IResultSet;
{

   if not BoundActive(tbbySHKObjNrec) then
   {
    set _cSHKObj := _pcSHKObj;
    pushbounds(tbbySHKObjNrec);
   }

  var qKatBOXSaldo : iQuery = queryManager.createQuery(queryKatBOXSaldo);
    var SelectFields : longint = 0;

   _loop SHKObjSP_HEAD
      {
        if pos('VA_1423',SHKObjSP_HEAD.SYSNAMETBL) = 1 then continue;
        if pos('VA_1413',SHKObjSP_HEAD.SYSNAMETBL) = 1 then continue;
        MysqlAddStr( SelectFields ,' ,  ' +SHKObjSP_HEAD.SYSNAMETBL + '.'+SHKObjSP_HEAD.SYSNAME + ' as ' +SHKObjSP_HEAD.SYSNAMETBL + '_'+SHKObjSP_HEAD.SYSNAME  );
     }

  _loop SHKObjSP_SP
      {
        mylog('    _loop SHKObjSP_SP  ->  SHKObjSP_SP.SYSNAMETBL = ' + SHKObjSP_SP.SYSNAMETBL + '    SHKObjSP_SP.SYSNAME = ' + SHKObjSP_SP.SYSNAME );
        if pos('VA_1430',SHKObjSP_SP.SYSNAMETBL) = 1 then continue;
        if pos('VA_1411',SHKObjSP_SP.SYSNAMETBL) = 1 then continue;
        MysqlAddStr( SelectFields ,' ,  ' +SHKObjSP_SP.SYSNAMETBL + '.'+SHKObjSP_SP.SYSNAME + ' as ' +SHKObjSP_SP.SYSNAMETBL + '_'+SHKObjSP_SP.SYSNAME  )
      }
 var _anName : string;
  var Identificator : longint = 0;

        if pos('VA_1423',SHKOBJ.SYSNAMETBL) = 1
        then
          {
           _anName := SHKOBJ.SYSNAME;
           MysqlAddStr( Identificator ,'attrval.vstring');
           mylog('    %IdentityField =attrval.vstring');
          }
        else
          {
          _anName := '---';
           MysqlAddStr( Identificator ,SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME ) ;
           mylog('    %IdentityField =' + SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME );
          }

  qKatBOXSaldo.setMacro('IdentityField', Identificator);

  qKatBOXSaldo.setMacro('SelectFields', SelectFields);

  qKatBOXSaldo.setParam('anName', _anName);
   var _type : byte = GetTypeByTableAndField(SHKOBJ.SYSNAMETBL, SHKOBJ.SYSNAME);
   mylog('    _type = '+string(_type) ) ;
 case _type of
        4 :  qKatBOXSaldo.setParam('pIdent',    word(_pIdent) );
        6 :  qKatBOXSaldo.setParam('pIdent', longint(_pIdent) );
       11 :  qKatBOXSaldo.setParam('pIdent',  double(_pIdent) );
       17 :  qKatBOXSaldo.setParam('pIdent',    comp(_pIdent) );
        else qKatBOXSaldo.setParam('pIdent',  _pIdent);
   end;

   result := qKatBOXSaldo.getResultSet;

}

function GenerateJSON_VALUES_KatBOXSaldoONE(_ActionName: string; _pIdent: string; var _err : string) : TpTr;
{
 var iRes : IResultSet = GetResultQueryForKatBOXSaldo(GetTMPLTByName(_ActionName), _pIdent);


  var JSONObj_VALUES: TPtr = HttpConnect_JsonObjectCreate(m_service);
  var JSONObj_Array : TPtr = 0;
  var JSONObj_ArrayOneElement : tptr =0  ;

 if NullVipRef(iRes) then
 {

//    HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'ERROR', 'ОШИБКА ВЫПОЛНЕНИЯ ЗАПРОСА В БД');
    _err := 'ОШИБКА ВЫПОЛНЕНИЯ ЗАПРОСА В БД';
    result := 0;
    exit;

 }

 if iRes.getFirst <>  tsOk
  {
//    HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'ERROR', 'НЕ НАЙДЕН ОБЪЕКТ ПО '+SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME +' = ' + _pIdent);
//    _err := 'НЕ НАЙДЕН ОБЪЕКТ ПО '+SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME +' = ' + _pIdent;
    _err := 'По штрихкоду "' + _pIdent +'" не найден объект в Галактика ERP';
    result := 0;
    exit;
  }

  var _ZeroCnt : word = 0;
      do
      {
        if double(iRes.row.val('SYS_SALDOBOXKOL')) <> 0 then _ZeroCnt++;
      } while iRes.getNext = tsOk;

 if _ZeroCnt = 0
  {
//    HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'ERROR', 'НЕ НАЙДЕН ОБЪЕКТ ПО '+SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME +' = ' + _pIdent);
    _err := 'НУЛЕВОЙ ОСТАТОК В ЯЧЕЙКЕ  '+SHKOBJ.SYSNAMETBL+'.'+SHKOBJ.SYSNAME +' = "'+_pIdent+'"';
    result := 0;
    exit;
  }



  if iRes.getFirst <>  tsOk {}


        HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'OBJECTACTION', SHKObj.Action);
        var _SYS_KATBOXNREC   : comp = iRes.row.val('SYS_KATBOXNREC');
        HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'IDOBJECT'       , String(_SYS_KATBOXNREC));
        HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'SYS_KATBOXNREC'       , String(_SYS_KATBOXNREC));

        var _SYS_BARCODE   : string = iRes.row.val('SYS_BARCODE');
        HttpConnect_JsonObjectAddString(m_service, JSONObj_VALUES, 'SYS_BARCODE'       , String(_SYS_BARCODE));


//       JSONObj_Array := HttpConnect_JsonArrayCreate(m_service);

//      var JSONObj_ArrayOneElement : tptr = HttpConnect_JsonObjectCreate(m_service);
     var JSONObj_FIELDS : tptr = HttpConnect_JsonObjectCreate(m_service);
       _loop SHKObjSP_HEAD
         {
           var _value : string = coUnRealString;
//           var JSONObj_ArrayOneElement : tptr = HttpConnect_JsonObjectCreate(m_service);

           if pos('VA_1423',SHKObjSP_HEAD.SYSNAMETBL) = 1 then {
                _value := piextattr.sgetattr(1423, _SYS_KATBOXNREC, SHKObjSP_HEAD.SYSNAME);
             }

             if _value = coUnRealString then _value := iRes.row.val(SHKObjSP_HEAD.SYSNAMETBL + '_'+SHKObjSP_HEAD.SYSNAME);
//             HttpConnect_JsonObjectAddString(m_service, JSONObj_ArrayOneElement, SHKObjSP_HEAD.SYSNAMETBL+'_'+SHKObjSP_HEAD.SYSNAME, _value);

             HttpConnect_JsonObjectAddString(m_service, JSONObj_FIELDS, SHKObjSP_HEAD.SYSNAMETBL+'_'+SHKObjSP_HEAD.SYSNAME, _value);
//           HttpConnect_JsonArrayAddObject(m_service, JSONObj_Array, JSONObj_ArrayOneElement);
         }
//         HttpConnect_JsonObjectAddObject(m_service, JSONObj_VALUES, 'FIELDS', JSONObj_Array);
          HttpConnect_JsonObjectAddObject(m_service, JSONObj_VALUES, 'FIELDS', JSONObj_FIELDS);

  JSONObj_Array := HttpConnect_JsonArrayCreate(m_service);
      do
      {
        if double(iRes.row.val('SYS_SALDOBOXKOL')) = 0 then continue;

         var _SYS_KATMCNREC         : comp = iRes.row.val('SYS_KATMCNREC');
         var _SYS_KATPARTYNREC      : comp = iRes.row.val('SYS_KATPARTYNREC');
         if _SYS_KATMCNREC = 0h then continue;

         JSONObj_ArrayOneElement := HttpConnect_JsonObjectCreate(m_service);
         _loop SHKObjSP_SP
           {
             var _value : string = coUnRealString;

             if pos('VA_1411',SHKObjSP_SP.SYSNAMETBL) = 1 then {
                  _value := piextattr.sgetattr(1411, _SYS_KATMCNREC, SHKObjSP_SP.SYSNAME);
               }

             if pos('VA_1430',SHKObjSP_SP.SYSNAMETBL) = 1 then  {
                  _value := piextattr.sgetattr(1430, _SYS_KATPARTYNREC, SHKObjSP_SP.SYSNAME);
             }

              if _value = coUnRealString then _value := iRes.row.val(SHKObjSP_SP.SYSNAMETBL + '_'+SHKObjSP_SP.SYSNAME);
              mylog('   _value = ' + _value);
              HttpConnect_JsonObjectAddString(m_service, JSONObj_ArrayOneElement, SHKObjSP_SP.SYSNAMETBL+'_'+SHKObjSP_SP.SYSNAME, _value);
           }
         HttpConnect_JsonArrayAddObject(m_service, JSONObj_Array, JSONObj_ArrayOneElement);
      } while iRes.getNext = tsOk;
    HttpConnect_JsonObjectAddObject(m_service, JSONObj_VALUES, 'COLUMNS', JSONObj_Array);


  result := JSONObj_VALUES;
}


function GenerateJSON_VALUES_KatBOXSaldo(_ActionName: string; _pIdent: string; var _err : string; _login: string = ''; _imei : string = '') : TpTr;
{

  var JSONObj_Array           : TPtr = HttpConnect_JsonArrayCreate(m_service);
  var JSONObj_ArrayOneElement : TPtr = HttpConnect_JsonObjectCreate(m_service);

//   по идее тут ставим цикл для пакетной выгрузки
   JSONObj_ArrayOneElement := GenerateJSON_VALUES_KatBOXSaldoONE(_ActionName,_pIdent,_err);

   if JSONObj_ArrayOneElement <> 0
    then HttpConnect_JsonArrayAddObject(m_service, JSONObj_Array, JSONObj_ArrayOneElement)
     else JSONObj_Array := 0;

  result := JSONObj_Array;
}



Function GetNextSoprNum ( wVidSopr: word ): String[20];
{
  var nYear: word;  nYear := if( KatSopr_makeAction.YearSopr <> 0, KatSopr_makeAction.YearSopr, Year( Cur_Date ) );

  GetNextSoprNum := '000001';

  if (wGetTune('FN.AvtoNum') <> 1)
    {
      GetNextSoprNum := GetLastNumD(wVidSopr);
      Exit
    }

  PushPos(#KatSopr_makeAction);

  if ( GetLast KatSopr_makeAction where (( wVidSopr == KatSopr_makeAction.VidSopr AND
                                              nYear == KatSopr_makeAction.YearSopr
                                        )) = tsOk )
    GetNextSoprNum := NextNumStr( KatSopr_makeAction.NSopr );

  PopPos(#KatSopr_makeAction);
}
// процедура проведения (актуализации) Актов внутрискладского перемещения
function ProcMovingAct(_login, _IMEI : string) : boolean;
var ret: longint;
    dblCntBeforeRaspr, dblRasprCnt: double;
    mrkProcessSpBox: TPtr;
    mrkCnt: longint;
    ccSpBox: comp;
    boIsErr: boolean;
{
    result := false;
  var  BoxFun: BoxFuncs;
   /*
    алгоритм перемещения
    1) проводим уже сформированные расходные записи (KatSopr.cSopr == SpBox.cSopr)
    2) создаем соответствующие "приходные записи" SpBox для выбранной ячейки хранения SpBox.cBox2
   */
  mrkProcessSpBox := InitMarker( 'GetProcessSpBox', 8, 100, 10 );
  ClearMarker( mrkProcessSpBox );
  boIsErr := FALSE;

  _LOOP SpBox_makeAction where ((katsopr_makeAction.NRec == SpBox_makeAction.cSopr ))
    if NOT NextVisual
      Break
    else
      {
        dblCntBeforeRaspr := -SpBox_makeAction.Kol;
        //фактическое списание со "старых" ячеек
        dblRasprCnt := BoxFun.PutInBox( KatSopr_makeAction.NRec        // cSopr: comp;
                                      , SpBox_makeAction.NRec          // cSpBox: comp;
                                      , KatSopr_makeAction.cPodrFrom   // cPodr: comp;
                                      , SaldoBox_makeAction.cBox       // cBox
                                      , if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, KatSopr_makeAction.dSopr)
                                      , SaldoBox_makeAction.cMC
                                      , SaldoBox_makeAction.cParty
                                      , KatMC.Volume
                                      , dblCntBeforeRaspr   // списываем!
                                      );
        if ( NOT f_KolIsZero( abs(dblCntBeforeRaspr) - abs(dblRasprCnt) ) )
          {
            boIsErr := TRUE;
            Break;
          }

        InsertMarker( mrkProcessSpBox, SpBox_makeAction.NRec );
      }

   //2-ой вариант передача параметров для распеределения МЦ при помощи временной т-цы!?

   mrkCnt := GetMarkerCount( mrkProcessSpBox );

   For (
         ret := 0;
         (ret < mrkCnt) AND NextVisual AND (NOT boIsErr);
         ret := ret + 1
       )
     {
       if NOT GetMarker( mrkProcessSpBox, ret, ccSpBox )
         {
           boIsErr := TRUE;
           Break;
         }
       else
         if GetFirst SpBox_makeAction where (( ccSpBox == SpBox_makeAction.NRec )) <> tsOk
           {
             boIsErr := TRUE;
             Break;
           }
         else
           {                        //т.к. кол-во уже отрицательное!
             dblCntBeforeRaspr := SpBox_makeAction.Kol;
             //фактический приход на "новые" ячейки
             dblRasprCnt := BoxFun.PutInBox
                             ( KatSopr_makeAction.NRec
                             ,          0 //запись по приходу необх-мо все-таки создать
                             , KatSopr_makeAction.cPodrFrom
                             , SpBox_makeAction.cBox2 // в какую ячейку перемещаем
                             , if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, KatSopr_makeAction.dSopr)
                             , SaldoBox_makeAction.cMC
                             , SaldoBox_makeAction.cParty
                             , KatMC.Volume
                             , dblCntBeforeRaspr
                             );

             if ( NOT f_KolIsZero( abs(dblCntBeforeRaspr) - abs(dblRasprCnt) ) )
               {
                 boIsErr := TRUE;
                 Break;
               }
           }
     }//for

   if ( boIsErr )
     {
       exit;
     }
   else
     {
       //как поменять KatSopr.Status на "закрытый" !?
       if (GetFirst KatNotes2 where ((
                                       623 == KatNotes2.VidDoc AND
                                         1 == KatNotes2.Status
                                   )) = tsOk )
         oStatlog.StatLog_InsNewStat( 623
                                    , KatSopr_makeAction.NRec
                                    , KatSopr_makeAction.Status
                                    , KatSopr_makeAction.cNote
                                    , 1
                                    , KatNotes2.NRec
                                    , 'Проведение с ТСД: login= "'+_login+'" IMEI= "' + _IMEI+'"  '+ DateToStr( if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, KatSopr_makeAction.dSopr), 'DD/MM/YYYY' )
                                    );

       set KatSopr_makeAction.Status := 1;
       KatSopr_makeAction.cNote := KatNotes2.NRec;
       KatSopr_makeAction.dOpr := if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, KatSopr_makeAction.dSopr);
       Update current KatSopr_makeAction;
     }

   DoneMarker( mrkProcessSpBox, 'GetProcessSpBox' );
  result := true;
}

function MakeAction_MakeAction_SALDOBOX(_login, _IMEI : string) : tPtr  ;
{
  var JSONObj : TPtr = HttpConnect_JsonObjectCreate(m_service);
/*
 if getfirst _tElements where ((0 == _tElements.npp and 'IDOBJECT' == _tElements.name)) <> tsOK
  {
   #WRITE_JSONERROR(JSONObj,'does not exist element IDOBJECT in table _tElements','не найден элемент IDOBJECT в _tElements')
   result := JSONObj;
   exit;
  }

  var _cSALDOBOXBox : comp = comp(_tElements.value);
  if getfirst SALDOBOX_MakeAction where ((_cSALDOBOXBox == SALDOBOX_MakeAction.nrec)) <> tsOK
   {
     #WRITE_JSONERROR(JSONObj,'does not exist SALDOBOX where nrec = ' + _tElements.value,'не найдена накладной SALDOBOX с nrec = ' + _tElements.value)
     result := JSONObj;
     exit;
   }
*/
// var _ERRORENG,_ERRORRUS : string = '';

/*  if not checkkatSopr_makeAction(_ERRORENG,_ERRORRUS) // тут все проверки типа статуса, оприхордлования и т.д.
   {
     #WRITE_JSONERROR(JSONObj,_ERRORENG,_ERRORRUS)
     result := JSONObj;
     exit;
   }
*/

 if getfirst _tElements where ((0 == _tElements.npp and 'ACTIONBODY' == _tElements.name)) <> tsOK
  {
   #WRITE_JSONERROR(JSONObj,'does not exist element ACTIONBODY in table _tElements','не найден элемент ACTIONBODY в _tElements')
   result := JSONObj;
   exit;
  }
var _ActionBody : string = _tElements.value;
 mylog('_ActionBody = ' + _ActionBody);
  case _ActionBody of
      'MOVEBOX' : {
        mylog('_ActionBody = MOVEBOX TRUE');
            var _npp : longint = 1;
            var _all_katBox_to_empty : boolean = true;
            var _all_kol_zero : boolean = true;

            do
            {
             mylog('check:  _npp = '+ string(_npp) );
              var _ckatBox_to : comp = 0;
              var _needThisRow : boolean = false;
              _loop _tElements where ((_npp == _tElements.npp)) and pos('KATBOX_TO_',_tElements.name) = 1 {   // указана ячейка куда
                 mylog('check: TRUE _loop _tElements where ((_npp == _tElements.npp)) and pos(KATBOX_TO_,_tElements.name) = 1 ');
                if _needThisRow then continue;
                  var _ActionSpName : string = getspActionName(_tElements.name);
                   mylog('check:  _ActionSpName='+_ActionSpName);
                    if _ActionSpName <> '' then  {
                      var _iSHK_InOut : SHK_InOut new;
                       _ckatBox_to := _iSHK_InOut.GetKATBOXNRECByIdent(_ActionSpName, _tElements.value, true);
                       if _ckatBox_to <> 0h
                       then { _needThisRow := true;
                              _all_katBox_to_empty := False;
                       }
                       else {
                         if _tElements.value <> '' {
                             #WRITE_JSONERROR(JSONObj,'does not exist SaldoBox_to where nrec = ' + string(_tElements.value),'В позиции '+string(_npp)+' введен некорректный штрихкод ячейки-получателя ('+string(_tElements.value)+'). Ячейки с таким штрихкодом не существует')
                             HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                             HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                             mylog('В позиции '+string(_npp)+' введен некорректный штрихкод ячейки-получателя ('+string(_tElements.value)+'). Ячейки с таким штрихкодом не существует');
                             result := JSONObj;
                             exit;
                         }
                       }
                       mylog('check:  _needThisRow='+ string(_needThisRow));
                    }
                 }
              mylog('check:   _ckatBox_to = ' + string(_ckatBox_to,0,0) );

              var _tmpkol : double = 0;
              if _needThisRow then {
                 _needThisRow := false;
                 _loop _tElements where ((_npp == _tElements.npp)) and pos('SALDOBOX_TO',_tElements.name) = 1 {  // количество перемещаемое ненулевое
                   mylog('_loop _tElements where ((_npp == _tElements.npp)) and pos(SALDOBOX_TO,_tElements.name) = 1');
                   //if _needThisRow then continue;
                     var _field : string = extractdelimitedword(_tElements.name,3,'_'); // CU_1009_KAU_2
                      case _field of
                        'KOL' :{
                                _try {
                                  mylog('check:  KOL='+ _tElements.value);
                                  _tmpkol := double(_tElements.value);
                                  }
                                _except
                                  on ExNumberConvert: {
                                     #WRITE_JSONERROR(JSONObj,'Field KOL value not a number : "'  +_tElements.value+ '"','В поле "Перемещаемое кол-во" введено не числовое значение: '+string(_tElements.value)+'. Позиция '+string(_npp) )
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                                     mylog('check: В поле "Перемещаемое кол-во" введено не числовое значение: '+string(_tElements.value)+'. Позиция '+string(_npp) );
                                     result := JSONObj;
                                     exit;
                                   }
                                 if _tmpkol < 0 then {
                                     #WRITE_JSONERROR(JSONObj,'Field KOL value less then 0 : "'  +_tElements.value+ '"','В поле "Перемещаемое кол-во" введено отрицательное значение: ' +string(_tElements.value)+ '. Позиция ' +string(_npp) )
                                     mylog('check: В поле "Перемещаемое кол-во" введено отрицательное значение:' +string(_tElements.value)+ '". Позиция' + string(_npp) );
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                                     result := JSONObj;
                                     exit;
                                   }
                                 if _tmpkol = 0 then {
                                     #WRITE_JSONERROR(JSONObj,'Field KOL value less then 0 : "'  +_tElements.value+ '"','В позиции '+string(_npp)+' перемещаемое количество равно 0')
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                                     mylog('check: В позиции '+string(_npp)+' перемещаемое количество равно 0');
                                     result := JSONObj;
                                     exit;
                                   }

                                if _tmpkol > 0 {
                                  _needThisRow := true; //принципиально не отрицательное, а вот целое или нет проверим дальше по МЦ
                                  _all_kol_zero := false;
                                }
                          }
                        else {
                         #WRITE_JSONERROR(JSONObj,'field "'+_field+'" doesnot allow to modify','поле "'+_field+'" не предусмотрено для модификации/ позиция' +string(_npp) )
                         mylog('check: поле "'+_field+'" не предусмотрено для модификации');
                         result := JSONObj;
                         exit;
                       }
                      end;
                    }
                }


             if _needThisRow {
                  var _cSaldoBox : comp = 0h;
                  var _SpecFieldIDName : string = GetSpecFieldIDName;

                  if (getfirst _tElements where ((_npp == _tElements.npp)) and _tElements.name = _SpecFieldIDName) = tsOK
                   {
                    mylog('check: if (getfirst _tElements where ((_npp == _tElements.npp)) and _tElements.name = _SpecFieldIDName) = tsOK');

                     _cSaldoBox := comp(_tElements.value);
                     mylog('check: _cSaldoBox='+string(_cSaldoBox,0,0) );
                     if _cSaldoBox <> 0h then {
                         if getfirst SaldoBox_makeAction where ((_cSaldoBox == SaldoBox_makeAction.nrec)) <> tsOK
                          {
                             #WRITE_JSONERROR(JSONObj,'does not exist SaldoBox where nrec = ' + string(_tElements.value),'не найдена запись SaldoBox с nrec = ' + string(_tElements.value) + '/позиция' + string(_npp) )
                             mylog('не найдена запись SaldoBox с nrec = ' + _tElements.value);
                             result := JSONObj;
                             exit;
                          }
                       if getfirst katmc where ((SALDOBOX_MakeAction.cmc == katMc.nrec)) = tsOK {
                         if getfirst kated where ((katMc.cEd == kated.nrec)) = tsOK {
                           if kated.diskret = 1 then {
                              if round(_tmpkol,0)  <> _tmpkol {
                                 #WRITE_JSONERROR(JSONObj,'The KOL field is not an integer, although the unit of measurement MC is indivisible  = ' + string(_tmpkol),'Указано дробное число '+string(_tmpkol)+' при неделимой единице измерения. Позиция '+string(_npp) )
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                                 mylog('check: Указано дробное число '+string(_tmpkol)+' при неделимой единице измерения. Позиция '+string(_npp) );
                                 result := JSONObj;
                                 exit;
                              }
                            }
                          }
                       }


                       mylog('check: cbox from = ' + string(SaldoBox_makeAction.cbox,0,0) );
                       if _ckatBox_to = SaldoBox_makeAction.cbox {
                         #WRITE_JSONERROR(JSONObj,'the cell from where and where is the same','В позиции '+ string(_npp) +' совпадают ячейка-отправитель и ячейка-получатель')
                         mylog('check: В позиции'+ string(_npp) +' совпадают ячейка-отправитель и ячейка-получатель');
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                         result := JSONObj;
                         exit;
                       }

                       var _cPodr_to, _cPodr_from : comp = 0h;

                       if getfirst KatBox_tmp where ((_ckatBox_to == KatBox_tmp.nrec)) = tsOK {
                             _cPodr_to := KatBox_tmp.CPODR
                            }

                       if getfirst KatBox_tmp where ((SaldoBox_makeAction.cbox == KatBox_tmp.nrec)) = tsOK {
                             _cPodr_from := KatBox_tmp.CPODR
                            }

                       if _cPodr_to <> _cPodr_from {
                         #WRITE_JSONERROR(JSONObj,'The movement is performed between the cells of different warehouses','В позиции '+string(_npp)+' в качестве ячейки-получателя указана ячейка другого склада')
                         mylog('check: В позиции '+string(_npp)+' в качестве ячейки-получателя указана ячейка другого склада');
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                         result := JSONObj;
                         exit;
                       }

                       if SaldoBox_makeAction.Kol < _tmpkol {
                         #WRITE_JSONERROR(JSONObj,'The specified amount is greater than the balance in the cell '+string(SaldoBox_makeAction.Kol) +'<'+ string(_tmpkol),'В позиции '+string(_npp)+' перемещаемое количество '+string(_tmpkol)+' превышает остаток '+string(SaldoBox_makeAction.Kol))
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'ROW_NUMBER' , string(_npp));
                                     HttpConnect_JsonObjectAddString( m_service, JSONObj, 'SYSNAME' , _tElements.name);

                         mylog('check: В позиции '+string(_npp)+' перемещаемое количество '+string(_tmpkol)+' превышает остаток '+string(SaldoBox_makeAction.Kol));
                         result := JSONObj;
                         exit;
                       }

                         mylog('check: все ок. по данной позиции');
                     }
                   }
                   else
                    {
                         #WRITE_JSONERROR(JSONObj,'does not exist system field _SpecFieldIDName= ' + _SpecFieldIDName,'не найдено служебное поле _SpecFieldIDName= ' + _SpecFieldIDName+'/позиция' +string(_npp) )
                         mylog('check: не найдено служебное поле _SpecFieldIDName= ' + _SpecFieldIDName);
                         result := JSONObj;
                         exit;
                    }

               }
              _npp++;
            } while getfirst _tElements where ((_npp == _tElements.npp)) = tsOK


            if _all_kol_zero = true {
                         #WRITE_JSONERROR(JSONObj,'all quantity is zero ', 'Отсутствуют заполненные позиции для обработки')
                         mylog('по всем перемещаемым ячейкам указано нулевое количество');
                         result := JSONObj;
                         exit;

            }

            if _all_katBox_to_empty {
                         #WRITE_JSONERROR(JSONObj,'all katbox_to is empty', 'Отсутствуют заполненные позиции для обработки')
                         mylog('ни в одной позиции не заполнены коды ячеек куда');
                         result := JSONObj;
                         exit;

            }


            // все проверки выполненя, и раз дошли сюда, то формируем документы по всем позициям, где указан код ячейки куда
            _npp := 1;
            do
            {
             mylog('_npp = '+ string(_npp) );
              var _ckatBox_to : comp = 0;
              var _needThisRow : boolean = false;
              _loop _tElements where ((_npp == _tElements.npp)) and pos('KATBOX_TO_',_tElements.name) = 1 {   // указана ячейка куда
                 mylog('TRUE _loop _tElements where ((_npp == _tElements.npp)) and pos(KATBOX_TO_,_tElements.name) = 1 ');
                if _needThisRow then continue;
                  var _ActionSpName : string = getspActionName(_tElements.name);
                   mylog('_ActionSpName='+_ActionSpName);
                    if _ActionSpName <> '' then  {
                      if _tElements.value <> '' {
                          var _iSHK_InOut : SHK_InOut new;
                           _ckatBox_to := _iSHK_InOut.GetKATBOXNRECByIdent(_ActionSpName, _tElements.value);
                           if _ckatBox_to <> 0h
                           then { _needThisRow := true;
                           }
                           mylog('_needThisRow='+ string(_needThisRow));
                       }
                    }
                 }
              mylog(' _ckatBox_to = ' + string(_ckatBox_to,0,0) );
             if getfirst KatBox_tmp where ((_ckatBox_to == KatBox_tmp.nrec)) = tsOK {
                   mylog(' KatBox_to.name = ' + KatBox_tmp.name);
                  }
                  else {
                   mylog(' ERROR! не нашли ячейку KatBox_to.nrec = ' + string(_ckatBox_to,0,0) );
                  }

              var _tmpkol : double = 0;

              if _needThisRow then {
                 _needThisRow := false;
                 _loop _tElements where ((_npp == _tElements.npp)) and pos('SALDOBOX_TO',_tElements.name) = 1 {  // количество перемещаемое ненулевое
                   mylog('_loop _tElements where ((_npp == _tElements.npp)) and pos(SALDOBOX_TO,_tElements.name) = 1');
                   //if _needThisRow then continue;
                     var _field : string = extractdelimitedword(_tElements.name,3,'_'); // CU_1009_KAU_2
                      case _field of
                        'KOL' :{_tmpkol := double(_tElements.value);
                                if _tmpkol > 0 _needThisRow := true; //принципиально не отрицательное, а вот целое или нет проверим дальше по МЦ
                          }
                      end;
                    }
                }


             if _needThisRow {
                  var _cSaldoBox : comp = 0h;
                  var _SpecFieldIDName : string = GetSpecFieldIDName;

                  if (getfirst _tElements where ((_npp == _tElements.npp)) and _tElements.name = _SpecFieldIDName) = tsOK
                    {
                       mylog('if (getfirst _tElements where ((_npp == _tElements.npp)) and _tElements.name = _SpecFieldIDName) = tsOK');

                       _cSaldoBox := comp(_tElements.value);
                         mylog('_cSaldoBox='+string(_cSaldoBox,0,0) );
                         if _cSaldoBox <> 0h then {
                             if getfirst SaldoBox_makeAction where ((_cSaldoBox == SaldoBox_makeAction.nrec)) <> tsOK {
                                 mylog('Не найдена ячейка откуда по _cSaldoBox ');
                                 mylog('EXIT');
                                 exit;
                              }
                           }
                           else {
                             mylog('EXIT');
                             exit;
                           }
                         mylog('все ок. начинаем создание накладной на перемещение между ячейками');
                         Insert KatSopr_makeAction set
                              KatSopr_makeAction.vidsopr   := 623
                            , KatSopr_makeAction.CNOTE     := if (GetFirst KatNotes2 where ((623 == KatNotes2.VidDoc AND 0 == KatNotes2.Status)) = tsOk , KatNotes2.nrec,0h)
                            , KatSopr_makeAction.DSOPR     := cur_date
                            , KatSopr_makeAction.NSOPR     := GetNextSoprNum(623)
                            , KatSopr_makeAction.YEARSOPR  := year(cur_date)
                            , KatSopr_makeAction.CPODRFROM := SALDOBOX_MakeAction.cPodr
                            , KatSopr_makeAction.CPODRTO   := _ckatBox_to
                            , KatSopr_makeAction.VHODNAL   :=  1
                            , KatSopr_makeAction.DESCR     := sGetTune('USER.DESCR')
                            , KatSopr_makeAction.DESGR     := sGetTune('USER.DESGR')
                          ;

                         mylog('Insert KatSopr_makeAction set');
                          insert SpBox_makeAction set
                             SpBox_makeAction.VID       := 2
                           , SpBox_makeAction.CSOPR     := KatSopr_makeAction.nrec
                           , SpBox_makeAction.cSALDOBOX := SaldoBox_makeAction.nrec
                           , SpBox_makeAction.CBOX2     := _ckatBox_to
                           , SpBox_makeAction.KOL       := _tmpkol
                         ;
                       mylog('insert SpBox_makeAction set');

                       mylog(' _getfirst SpSopr_makeAction _cSaldoBox = ' + string(_cSaldoBox,0,0) )
                    }
                   else
                    {
                         #WRITE_JSONERROR(JSONObj,'does not exist system field _SpecFieldIDName= ' + _SpecFieldIDName,'не найдено служебное поле _SpecFieldIDName= ' + _SpecFieldIDName + '/позиция' +string(_npp) )
                         mylog('не найдено служебное поле _SpecFieldIDName= ' + _SpecFieldIDName);
                         result := JSONObj;
                         exit;
                    }

                 if not ProcMovingAct(_login, _IMEI)
                   then {
                     #WRITE_JSONERROR(JSONObj,'MAKEMOVE BOX NOT OK','Перемещение по ячейкам не выполнено')
                     mylog('Перемещение по ячейкам не выполнено');
                     result := JSONObj;
                     exit;
                    }
               }
              _npp++;
            } while getfirst _tElements where ((_npp == _tElements.npp)) = tsOK
           HttpConnect_JsonObjectAddInteger(m_service, JSONObj, 'RESULT_CODE', 1);
           HttpConnect_JsonObjectAddString( m_service, JSONObj, 'RESULT_MSG' ,     'MOVEBOX OK');
           HttpConnect_JsonObjectAddString( m_service, JSONObj, 'RESULT_MSG_RUS' , 'Перемещение между ячейками выполнено');
           result := JSONObj;
        }
    end;
}
